################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
library("lattice")
################### Actual code ####################
splom(~Values[1:5],groups=as.factor(sales),data=Values,pch=20,type='p',cex=1)
source('C:/opt/sandbox/pbisplom/script.r')
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
library("GGally")
############### Library Declarations ###############
library("scales")
install.packages("scales")
############### Library Declarations ###############
library("scales")
install.packages("scales")
############### Library Declarations ###############
library("scales")
install.packages("colorspace")
library("colorspace")
library("GGally")
################### Actual code ####################
# splom(~Values[1:5],groups=as.factor(sales),data=Values,pch=20,type='p',cex=1)
# g = qplot(`Petal.Length`, data = iris, fill = `Species`, main = Sys.time());
ggpairs(Values)
library("progress")
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
library("progress")
library("scales")
library("colorspace")
library("GGally")
library("progress")
################### Actual code ####################
# splom(~Values[1:5],groups=as.factor(sales),data=Values,pch=20,type='p',cex=1)
# g = qplot(`Petal.Length`, data = iris, fill = `Species`, main = Sys.time());
ggpairs(Values)
ggpairs
install.packages("ggobi")
install.packages("rggobi")
library('rggobi')
library(rggobi)
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
#library("progress") <- This moduele not compatible PBI Service
library("showtext")
library("scales")
library("colorspace")
library("GGally")
################### Actual code ####################
powerbi_rEnableShowTextForCJKLanguages =  1
# splom(~Values[1:5],groups=as.factor(sales),data=Values,pch=20,type='p',cex=1)
# g = qplot(`Petal.Length`, data = iris, fill = `Species`, main = Sys.time());
ggp = ggpairs(Values, progress = FALSE)
print(ggp, progress = F, colour = 'cut')
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
#library("progress") <- This moduele not compatible PBI Service
library("showtext")
library("scales")
library("colorspace")
library("GGally")
library(rggobi)
library(rggobi)
source("http://www.ggobi.org/downloads/install.r")
quit()
library(rggobi); ggobi(mtcars)
Sys.setlocale("LC_CTYPE","C")
library(rggobi); ggobi(mtcars)
################### Actual code ####################
powerbi_rEnableShowTextForCJKLanguages =  1
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
#library("progress") <- This moduele not compatible PBI Service
library("showtext")
library("scales")
library("colorspace")
library("GGally")
################### Actual code ####################
powerbi_rEnableShowTextForCJKLanguages =  1
ggp = ggpairs(Values, color = 'cut')
ggp = ggpairs(Values)
print(ggp, progress = F, color = 'cut')
p_ <- GGally::print_if_interactive
plotList <- list()
for (i in 1:6) {
plotList[[i]] <- ggally_text(paste("Plot #", i, sep = ""))
}
pm <- ggmatrix(
plotList,
2, 3,
c("A", "B", "C"),
c("D", "E"),
byrow = TRUE
)
p_(pm)
pm <- ggmatrix(
plotList,
2, 3,
xAxisLabels = c("A", "B", "C"),
yAxisLabels = NULL,
byrow = FALSE,
showXAxisPlotLabels = FALSE
)
p_(pm)
ggp = ggpairs(Values, mapping = aes(color = sex))
print(ggp, progress = F, color = 'cut')
ggp = ggpairs(Values, mapping = aes(color = sales))
print(ggp, progress = F)
ggp = ggpairs(Values, mapping = aes(colour = "smooth"))
print(ggp, progress = F)
ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
print(ggp, progress = F)
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values[1:5], mapping = aes(color = "satisfaction_level"))
print(ggp, progress = F)
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values[1:5], mapping = aes(color = "sales"))
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values, mapping = aes(color = "sales"))
print(ggp, progress = F)
################# DEBUG in RStudio #################
setwd("C:/opt/sandbox/pbisplom")
Values <- read.csv("../testVizRDoc/HR_comma_sep.csv", sep = ",")
fileRda = "C:/Users/maotsuka.FAREAST/AppData/Local/Temp/tempData.Rda"
if(file.exists(dirname(fileRda)))
{
if(Sys.getenv("RSTUDIO")!="")
load(file= fileRda)
else
save(list = ls(all.names = TRUE), file=fileRda)
}
############### Library Declarations ###############
#library("progress") <- This moduele not compatible PBI Service
library("showtext")
library("scales")
library("colorspace")
library("GGally")
################### Actual code ####################
powerbi_rEnableShowTextForCJKLanguages =  1
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values, mapping = aes(colour = "sales"))
Values
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values, mapping = aes(colour = "salary"))
print(ggp, progress = F)
#ggp = ggpairs(Values, mapping = aes(colour = "smooth", color = "satasfaction_level"))
ggp = ggpairs(Values, mapping = aes(colour = salary))
print(ggp, progress = F)
ggp = ggpairs(Values[1:4], mapping = aes(colour = "smooth", color = salary))
#ggp = ggpairs(Values, mapping = aes(colour = salary))
print(ggp, progress = F)
head(Values)
ggp = ggpairs(Values[1:10], mapping = aes(colour = "smooth", color = salary))
ggp = ggpairs(Values[1:10], mapping = aes(color = salary))
#ggp = ggpairs(Values, mapping = aes(colour = salary))
print(ggp, progress = F)
ggp = ggpairs(Values[1:4,10], mapping = aes(color = salary))
ggp = ggpairs(Values[1,2,3,4,10], mapping = aes(color = salary))
ggp = ggpairs(Values[6:10], mapping = aes(color = salary))
#ggp = ggpairs(Values, mapping = aes(colour = salary))
print(ggp, progress = F)
ggp = ggpairs(Values[6:10], mapping = aes(colour = salary))
#ggp = ggpairs(Values, mapping = aes(colour = salary))
print(ggp, progress = F)
ggp = ggpairs(Values)
print(ggp, progress = F)
#ggp = ggpairs(Values[6:10], mapping = aes(colour = salary))
ggp = ggpairs(Values[6:10], mapping = aes(colour = Values[,10]))
print(ggp, progress = F)
#ggp = ggpairs(Values[6:10], mapping = aes(colour = salary))
ggp = ggpairs(Values, mapping = aes(colour = Values[,10]))
print(ggp, progress = F)
